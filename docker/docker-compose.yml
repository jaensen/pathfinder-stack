services:

  indexer-db-init:
    build:
      dockerfile: ${PWD}/../indexer-db-init/Dockerfile
      context: ${PWD}/../indexer-db-init
    healthcheck:
      test: [ "CMD", "test", "-f", "/app/.ready" ]
      interval: 30s
      timeout: 10s
      retries: 12
    depends_on:
      indexer-db:
        condition: service_healthy
    networks:
      - internal
    environment:
      POSTGRES_HOST: ${INDEXER_DB_POSTGRES_HOST}
      POSTGRES_PORT: ${INDEXER_DB_POSTGRES_PORT}
      POSTGRES_DB: ${INDEXER_DB_POSTGRES_DB}
      POSTGRES_USER: ${INDEXER_DB_POSTGRES_USER}
      POSTGRES_PASSWORD: ${INDEXER_DB_POSTGRES_PASSWORD}

  indexer-db:
    image: postgres:15
    restart: unless-stopped
    ports:
      - 5432:5432
    networks:
      - internal
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -h localhost -p 5432 -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 100
    environment:
      POSTGRES_PASSWORD: ${INDEXER_DB_POSTGRES_PASSWORD}
      PGPASSWORD: ${INDEXER_DB_POSTGRES_PASSWORD}
      POSTGRES_DB: ${INDEXER_DB_POSTGRES_DB}
    volumes:
      - ${PWD}/.state/indexer-db/pg_data:/var/lib/postgresql/data

  blockchain-indexer:
    build:
      dockerfile: ${PWD}/../blockchain-indexer/Dockerfile
      context: ${PWD}/../blockchain-indexer
    depends_on:
      indexer-db-init:
        condition: service_healthy
    expose:
      - 8675
    restart: unless-stopped
    networks:
      - internal
    ports:
      - 8675:8675
    environment:
      INDEXER_WEBSOCKET_URL: ${BLOCKCHAIN_INDEXER_WEBSOCKET_URL}
      INDEXER_RPC_GATEWAY_URL: ${CHAIN_RPC_URL}
      HUB_ADDRESS: ${CONTRACT_ADDRESS_CIRCLES_HUB}
      INDEXER_CONNECTION_STRING: ${BLOCKCHAIN_INDEXER_CONNECTION_STRING}
      START_FROM_BLOCK: ${BLOCKCHAIN_INDEXER_START_FROM_BLOCK}
    volumes:
      - ${PWD}/.state/ganache-init/status/:/app/status/

  pathfinder2-updater:
    depends_on:
      - pathfinder2
      - blockchain-indexer
    build:
      dockerfile: ${PWD}/../pathfinder2-updater/Dockerfile
      context: ${PWD}/../pathfinder2-updater
    restart: unless-stopped
    networks:
      - internal
    environment:
      INDEXER_DB_CONNECTION_STRING: ${PATHFINDER_UPDATER_INDEXER_DB_CONNECTION_STRING}
      INDEXER_WS_URL: ${PATHFINDER_UPDATER_INDEXER_WS_URL}
      INTERNAL_CAPACITY_GRAPH_PATH: ${PATHFINDER_UPDATER_INTERNAL_CAPACITY_GRAPH_PATH}
      EXTERNAL_CAPACITY_GRAPH_PATH: ${PATHFINDER_UPDATER_EXTERNAL_CAPACITY_GRAPH_PATH}
      PATHFINDER_RPC_URL: ${PATHFINDER_UPDATER_RPC_URL}
    volumes:
      - ${PWD}/.state/pathfinder:/var/pathfinder2/data

  pathfinder2:
    build:
      dockerfile: ${PWD}/../pathfinder2/Dockerfile
      context: ${PWD}/../pathfinder2
    restart: unless-stopped
    networks:
      - internal
    expose:
      - "54389"
    command:
      - "0.0.0.0:54389"
    volumes:
      - ${PWD}/.state/pathfinder:/var/pathfinder2/data

  pathfinder-proxy:
    image: circlesubi/pathfinder-proxy:dev
    restart: unless-stopped
    depends_on:
      - pathfinder2-updater
      - pathfinder2
    ports:
      - 8081:80
    networks:
      - internal
    environment:
      PORT: ${PATHFINDER_PROXY_PORT}
      CORS_ORIGINS: ${PATHFINDER_PROXY_CORS_ORIGINS}
      UPSTREAM_SERVICE_ENDPOINTS: ${PATHFINDER_PROXY_UPSTREAM_SERVICE_ENDPOINTS}
      UPSTREAM_HEALTH_ENDPOINTS: ${PATHFINDER_PROXY_UPSTREAM_HEALTH_ENDPOINTS}

networks:
  internal:
